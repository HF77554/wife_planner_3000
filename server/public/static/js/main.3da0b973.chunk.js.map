{"version":3,"sources":["components/NavBar.jsx","services/auth.service.js","components/Home.jsx","components/Login.jsx","services/auth-header.js","services/user.service.js","components/Profile/Profile.jsx","components/Planner/RoomSelection/RoomCreationForm.jsx","services/room.service.js","components/Planner/RoomSelection/RoomRequestForm.jsx","components/Planner/RoomSelection/RoomRequestAcceptance.jsx","components/Planner/RoomSelection/RoomCreation.jsx","components/Planner/RoomSelection/Room.jsx","components/Planner/RoomSelection/Rooms.jsx","components/Planner/RoomSelection/RoomSelection.jsx","components/Planner/RoomDisplay/TaskInProgress.jsx","components/Planner/RoomDisplay/TaskFinished.jsx","components/Planner/RoomDisplay/TaskForm.jsx","components/Planner/RoomDisplay/Tasks.jsx","components/Planner/RoomDisplay/RoomDisplayTasks.jsx","components/Planner/RoomDisplay/RoomDisplayHub.jsx","components/Planner/Planner.jsx","components/ContactUs.jsx","components/SignUp.jsx","components/RouterPage.jsx","App.js","index.js"],"names":["NavBar","onVerifiedUser","onLogOut","Navbar","bg","variant","to","Brand","Nav","className","Row","Col","Link","Button","size","onClick","SERVER_URL","exportedObject","register","username","userpassword","email","axios","post","login","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","getCurrentUser","parse","getItem","Home","Login","onLogin","history","useHistory","useState","setUsername","setUserpassword","Form","onSubmit","e","preventDefault","AuthService","push","err","console","log","alert","Group","controlId","Label","Control","type","placeholder","value","onChange","target","authHeader","user","DATABASE_URL","getUserInfo","a","get","headers","res","getUserInfoByID","userID","getUserInfoByEmail","userEmail","getRoomInfoByID","roomID","createRoom","adminID","otherUserID","roomName","updateRoomsInUserByID","_id","RoomID","delegatedRoomID","patch","UserRemoveRoomByID","filter","rID","Profile","userInfo","userInfoTask","useEffect","getUser","UserService","date","subscribeDate","Date","toString","RoomCreationForm","onUser","userChangesMade","emailTask","roomNameTask","errorMessage","errorMessageTask","onReset","otherUser","errorM","message","Container","getAllRooms","deleteRoom","delete","updateRoomsByID","roomObj","RoomRequestForm","room","roomChangesMade","roomNonAdminInfo","roomNonAdminInfoTask","roomAdminInfo","roomAdminInfoTask","userIsAdmin","userIsAdminTask","formColor","formColorTask","getRoomInfo","handleDeletion","admin","nonAdmin","RoomService","roomMessage","handleAcceptance","otherUserAcceptance","ListGroup","Item","xs","RoomRequestAcceptance","rooms","map","RoomCreation","Room","onRoomSelection","otherUserTask","getOtherUserInfo","roomDeletionHandler","r","ButtonGroup","ToggleButton","Rooms","RoomSelection","roomsInfo","roomsInfoTask","roomChangesMadeTask","getRoomsInfo","userRoomID","Promise","all","TaskInProgress","task","taskProgress","taskUrgency","taskFinish","taskDelete","taskMoveUp","taskMoveDown","taskBorderColor","taskBorderColorTask","taskBackgroundColor","taskBackgroundColorTask","inProgress","Urgent","isFinished","onDoubleClick","sm","description","TaskFinished","taskReturn","TaskForm","onTaskCreation","taskHandler","isUrgent","isUrgentHandler","split","length","newTask","id","now","Check","title","label","Tasks","tasks","Tabs","defaultActiveKey","Tab","eventKey","RoomDisplayTasks","delegatedTasks","tasksTask","delegatedTaskUpdate","activeTasks","finishedTasks","newTasks","oldTasks","t","filteredTasks","arrayIndex","indexOf","beforeArray","slice","moveRightArray","moveLeftArray","afterArray","newArray","activeTasksLength","newUrgency","RoomDisplayHub","Planner","roomSelected","roomSelectedTask","userChangesMadeTask","roomInfo","ContactUs","SignUp","setEmail","passwordVerification","passwordVerificationTask","RouterPage","userVerification","userVerificationTask","fixed","exact","path","component","App","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.3da0b973.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Navbar, Button, Nav, Col, Row} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nconst NavBar = ({onVerifiedUser, onLogOut}) => {\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n            <LinkContainer to=\"/Home\">\r\n                <Navbar.Brand>LOGO</Navbar.Brand>\r\n            </LinkContainer>                \r\n            <Nav className=\"me-auto my-2 text-light\">\r\n                <Row className='me-3 h4'>\r\n                    <Col>\r\n                        <LinkContainer to=\"/Home\">\r\n                            <Nav.Link>Home</Nav.Link>\r\n                        </LinkContainer>\r\n                    </Col>\r\n                    <Col>\r\n                        <LinkContainer to=\"/contactUs\">\r\n                            <Nav.Link>Contact</Nav.Link>\r\n                        </LinkContainer>\r\n                    </Col>\r\n                </Row>\r\n                {onVerifiedUser ?\r\n                <Row className='me-3 h4'>\r\n                    <Col>\r\n                        <LinkContainer to=\"/profile\">\r\n                            <Nav.Link>Profile</Nav.Link>\r\n                        </LinkContainer>\r\n                    </Col>\r\n                    <Col>\r\n                        <LinkContainer to=\"/planner\">\r\n                        <Nav.Link>Planner</Nav.Link>\r\n                        </LinkContainer>\r\n                    </Col>\r\n                </Row>\r\n                : ''} \r\n            </Nav>\r\n            <Nav className=\"me-4 h4 text-light\">\r\n                <Col>\r\n                    <LinkContainer to=\"/SignUp\">\r\n                        <Nav.Link>SignUp</Nav.Link>\r\n                    </LinkContainer>\r\n                </Col>\r\n                <Col>\r\n                    {onVerifiedUser ? \r\n                        <Button variant=\"danger\" size=\"lg\" onClick={onLogOut}>\r\n                            LogOut\r\n                        </Button>\r\n                        :\r\n                        <LinkContainer to=\"/Login\">\r\n                            <Nav.Link>Login</Nav.Link>\r\n                        </LinkContainer>\r\n                    }\r\n                </Col>\r\n            </Nav>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import axios from \"axios\";\r\n\r\nconst SERVER_URL = \"http://localhost:4000/\";\r\n\r\nconst register = (username, userpassword, email) => {\r\n  return axios.post(SERVER_URL + \"register\", {\r\n    username,\r\n    userpassword,\r\n    email\r\n  });\r\n};\r\n\r\nconst login = (username, userpassword) => {\r\n  return axios\r\n    .post(SERVER_URL + \"login\", {\r\n      username,\r\n      userpassword,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nconst exportedObject = {\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n};\r\n\r\nexport default exportedObject;","import React from \"react\";\r\n\r\nconst Home = () => {\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h2>Home</h2>\r\n        <p>\r\n        project for help in the daily life. We moved to a new place and my wife has a long set of chores for me. Instead of going bit by bit I want to create a todo list which I can improve in overtime. \r\n        Current criteria:\r\n        </p>\r\n        <p>\r\n          Site must be accessible by two different users under one auth [one combined sign in with two users?]\r\n\r\n          Todo items must have a name, description, and date posted\r\n\r\n          Todo items must have three settings: pending, in progress, awaiting confirmation. \r\n              pending: husband has not started the item\r\n              in progress: husband has seen the item and started work on item.\r\n              awating confirmation: husband has finished item, wife[original creator] must sign off on duty\r\n              Items on list must be able to be dragged to ensure wife priority order is met\r\n\r\n          **For urgent element color code element in list to RED\r\n        </p>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from 'react'\r\nimport {useState} from 'react'\r\nimport {Form, Button, Nav} from 'react-bootstrap'\r\nimport AuthService from \"../services/auth.service\";\r\nimport { useHistory} from \"react-router-dom\";\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nconst Login = ({onLogin}) => {\r\n    let history = useHistory();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [userpassword, setUserpassword] = useState(\"\");\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!username || !userpassword) {\r\n        alert(\"Missing a value in form, please fill all elements in form\");\r\n        return;\r\n        }\r\n        const onReset = () =>{\r\n            setUsername(\"\");\r\n            setUserpassword(\"\");\r\n        }\r\n        try {\r\n            AuthService.login(username, userpassword).then(\r\n                () => {\r\n                    history.push(\"/planner\")\r\n                },\r\n                (err) => {\r\n                    console.log({err:err})\r\n                }\r\n              ).then(onReset()).then(onLogin)\r\n        } catch (err) {\r\n            console.log({err:err})\r\n        }\r\n    \r\n    };\r\n\r\n    return (\r\n        <div className='login_class_container jumbotron'>\r\n            <Form onSubmit={onSubmit}>\r\n                \r\n                <Form.Group className=\"login_form_input mb-3\" controlId=\"formBasicText\">\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter username\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"login_form_input mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={userpassword} onChange={(e) => setUserpassword(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button className=\"m-6 btn-lg\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <LinkContainer to=\"/signup\">\r\n                    <Nav.Link className='text-center h5 mt-5'>No Profile? Click Here to Sign up!</Nav.Link>\r\n            </LinkContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Login\r\n","export default function authHeader() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    \r\n    if (user && user.accessToken) {\r\n      return `Bearer ${user.accessToken}`;\r\n    } else {\r\n      return ;\r\n    }\r\n}","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst DATABASE_URL = \"http://localhost:4000/\";\r\n\r\nconst getUserInfo = async () => {\r\n  try {\r\n    const res = await axios.get(DATABASE_URL + \"users\", { headers: {\"Authorization\" : authHeader()} })\r\n    const data = res.data\r\n    return data\r\n  } catch (err) {\r\n    console.log({err:err})\r\n  }\r\n};\r\n\r\nconst getUserInfoByID = async (userID) => {\r\n  try {\r\n    const res = await axios.get(DATABASE_URL + \"users/\" + userID, { headers: {\"Authorization\" : authHeader()} })\r\n    const data = res.data\r\n    return data\r\n  } catch (err) {\r\n    console.log({err:err})\r\n  }\r\n};\r\n\r\nconst getUserInfoByEmail = async (userEmail) => {\r\n  try {\r\n    const res = await axios.get(DATABASE_URL + \"find/\" + userEmail, { headers: {\"Authorization\" : authHeader()} })\r\n    const data = res.data\r\n    return data\r\n  } catch (err) {\r\n    console.log({err:err})\r\n  }\r\n};\r\n\r\nconst getRoomInfoByID = async (roomID) => {\r\n  try {\r\n    const res = await axios.get(DATABASE_URL + \"room/\" + roomID, { headers: {\"Authorization\" : authHeader()} })\r\n    const data = res.data\r\n    return data\r\n  } catch (err) {\r\n    console.log({err:err})\r\n  }\r\n};\r\n\r\nconst createRoom = async (adminID, otherUserID, roomName) => {\r\n  try {\r\n    const res = await axios.post(DATABASE_URL + \"room/create\", {adminID, otherUserID, roomName},\r\n    {\r\n        headers: {\"Authorization\" : authHeader(), \"Content-Type\": \"application/json\"}\r\n    })\r\n    const data = res.data\r\n    await updateRoomsInUserByID(adminID, data._id)\r\n    await updateRoomsInUserByID(otherUserID, data._id)\r\n    return data\r\n  } catch (err) {\r\n    console.log({err:err})\r\n  }\r\n};\r\n\r\n//updates room base on inputs\r\nconst updateRoomsInUserByID = async (userID, RoomID) => {\r\n  try {\r\n    const user = await getUserInfoByID(userID)\r\n    const delegatedRoomID = [...user.delegatedRoomID, RoomID]\r\n    const res = await axios.patch(DATABASE_URL + \"users/\" + userID, {delegatedRoomID},\r\n    {\r\n      headers: {\"Authorization\" : authHeader(), \"Content-Type\": \"application/json\"}\r\n    })\r\n    const data = res.data\r\n    return data\r\n  } catch (err) {\r\n    console.log({err:err})\r\n  }\r\n}\r\n\r\n//input room ID and it will be removed from delegatedRoomID Array\r\nconst UserRemoveRoomByID = async (userID, RoomID) => {\r\n  try {\r\n    const user = await getUserInfoByID(userID)\r\n    const delegatedRoomID = user.delegatedRoomID.filter(rID => rID !== RoomID)\r\n    const res = await axios.patch(DATABASE_URL + \"users/\" + userID, {delegatedRoomID},\r\n    {\r\n      headers: {\"Authorization\" : authHeader(), \"Content-Type\": \"application/json\"}\r\n    })\r\n    const data = res.data\r\n    return data\r\n  } catch (err) {\r\n    console.log({err:err})\r\n  }\r\n}\r\n\r\n\r\nconst exportedObject = {\r\n  getUserInfo,\r\n  getRoomInfoByID,\r\n  getUserInfoByID,\r\n  getUserInfoByEmail,\r\n  createRoom,\r\n  updateRoomsInUserByID,\r\n  UserRemoveRoomByID\r\n};\r\n\r\nexport default exportedObject;","import React from \"react\";\r\nimport {useState, useEffect} from 'react'\r\nimport UserService from \"../../services/user.service\";\r\n\r\nconst Profile = () => {\r\n  const [userInfo, userInfoTask] = useState();\r\n\r\n  useEffect(() => {\r\n    const getUser = async () =>{\r\n      const user = await UserService.getUserInfo();\r\n      if (user) {\r\n        userInfoTask(user)\r\n      }\r\n    }\r\n    \r\n    getUser()\r\n  }, []);\r\n\r\n  const dateConverter = (date) => {\r\n    const parseDate = new Date(date).toString();\r\n    return parseDate\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">  \r\n        <h2>Profile</h2>  \r\n        {!userInfo ?\r\n          <p>Please Login for access to user information...</p>\r\n          : \r\n          <div>\r\n            <h4>{userInfo.username}</h4>\r\n            <h4>{userInfo.email}</h4>\r\n            <h5>{dateConverter(userInfo.subscribeDate)}</h5>\r\n          </div>\r\n        }     \r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;","import React, {useState} from 'react'\r\nimport {Form, Button, Container, Row} from 'react-bootstrap'\r\n\r\nimport UserService from \"../../../services/user.service\";\r\n\r\n\r\nfunction RoomCreationForm({onUser, userChangesMade}) {\r\n    const [email, emailTask] = useState('')\r\n    const [roomName, roomNameTask] = useState('')\r\n    const [errorMessage, errorMessageTask] = useState()\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!email || !roomName) {\r\n            alert(\"Missing a value in form, please fill all elements in form\");\r\n            return;\r\n        }\r\n\r\n        if (email === onUser.email) {\r\n            return errorMessageTask('Error: current user email, room requires distinct users')\r\n        }\r\n\r\n        const onReset = () => {\r\n            emailTask('')\r\n            roomNameTask('')\r\n            errorMessageTask('')\r\n        }\r\n\r\n        try {\r\n            const otherUser = await UserService.getUserInfoByEmail(email);\r\n\r\n            //gives UI error message for not excisting email\r\n            if (!otherUser) return errorMessageTask('Error: user email not found')\r\n\r\n            //creates room\r\n            const newRoom = await UserService.createRoom(onUser._id, otherUser._id, roomName)\r\n\r\n            //resets and lets know of user changes\r\n            if(newRoom){\r\n                onReset()\r\n                userChangesMade()\r\n            }\r\n        } catch (err) {\r\n            const errorM = err.message\r\n            errorMessageTask(errorM)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Form className='text-center font-weight-bold' onSubmit={onSubmit}>\r\n                <Container className=\"m-3\">\r\n                    <Row className='mb-3 mt-3'>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter room name\" value={roomName} onChange={(e) => roomNameTask(e.target.value)} />\r\n                    </Row>\r\n                    <Row className='mb-3'>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e) => emailTask(e.target.value)} />\r\n                    </Row>\r\n                    <Row className='d-grid gap-2 mb-3'>\r\n                        <Button variant=\"primary\" size=\"lg\" type=\"submit\">\r\n                            Send Request!\r\n                        </Button>\r\n                    </Row>\r\n                    {errorMessage && <h5>{errorMessage}</h5>}\r\n                </Container>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoomCreationForm\r\n","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst DATABASE_URL = \"http://localhost:4000/\";\r\n\r\nconst getAllRooms = async () => {\r\n    try {\r\n      const res = await axios.get(DATABASE_URL + \"room\", { headers: {\"Authorization\" : authHeader()} })\r\n      const data = res.data\r\n      return data\r\n    } catch (err) {\r\n      console.log({err:err})\r\n    }\r\n  };\r\n\r\n//deletes room based on ID\r\nconst deleteRoom = async (roomID) => {\r\n    try {\r\n        const res = await axios.delete(DATABASE_URL +\"room/\"+roomID,\r\n        {\r\n            headers: {\"Authorization\" : authHeader()}\r\n        })\r\n        const data = res.data\r\n        return data\r\n    } catch (err) {\r\n        console.log({err:err})\r\n    }\r\n};\r\n\r\n//updates room based on ID\r\nconst updateRoomsByID = async (roomObj) => {\r\n    try{\r\n        const res = await axios.patch(DATABASE_URL + \"room/\" + roomObj._id, roomObj,\r\n        {\r\n            headers: {\"Authorization\" : authHeader(), \"Content-Type\": \"application/json\"}\r\n        })\r\n        const data = res.data\r\n        return data\r\n    } catch (err) {\r\n        console.log({err:err})\r\n    }\r\n}\r\n\r\n    const exportedObject = {\r\n        deleteRoom,\r\n        getAllRooms,\r\n        updateRoomsByID\r\n    };\r\n  \r\nexport default exportedObject;","import React, {useEffect, useState} from 'react'\r\n\r\nimport {ListGroup, Row, Col, Button} from 'react-bootstrap'\r\n\r\nimport UserService from \"../../../services/user.service\";\r\nimport RoomService from \"../../../services/room.service\";\r\n\r\nfunction RoomRequestForm({onUser, userChangesMade, room, roomChangesMade}) {\r\n    const [roomNonAdminInfo, roomNonAdminInfoTask] = useState()\r\n    const [roomAdminInfo, roomAdminInfoTask] = useState()\r\n    const [userIsAdmin, userIsAdminTask] = useState(true)\r\n    const [formColor, formColorTask] = useState('bg-info text-white')\r\n\r\n    useEffect(() => {\r\n        //accepts room info and gets both users information based on ID\r\n        const getRoomInfo = async () => {\r\n\r\n            const roomNonAdminInfo = await UserService.getUserInfoByID(room.otherUserID);\r\n            const roomAdminInfo = await UserService.getUserInfoByID(room.adminID);\r\n\r\n            if (roomNonAdminInfo && roomAdminInfo) {\r\n                roomNonAdminInfoTask(roomNonAdminInfo)\r\n                roomAdminInfoTask(roomAdminInfo)\r\n\r\n                //check if current user is Room admin or nonadmin\r\n                if (roomNonAdminInfo._id === onUser._id) {\r\n                    userIsAdminTask(false)\r\n                    formColorTask('.bg-warning text-dark')\r\n                } else {\r\n                    userIsAdminTask(true)\r\n                    formColorTask('bg-info text-white')\r\n                }\r\n            }\r\n        }\r\n\r\n        if (room && onUser) {\r\n            getRoomInfo()\r\n        }\r\n    }, [room, onUser]);\r\n\r\n    //removes room\r\n    const handleDeletion = async () => {        \r\n        try {\r\n            //remove room from admin's Room List - for admin\r\n            const admin = await UserService.UserRemoveRoomByID(room.adminID, room._id)\r\n            //remove room from other user's Room List - for admin\r\n            const nonAdmin = await UserService.UserRemoveRoomByID(room.otherUserID, room._id)\r\n            //remove room from other Rooms List\r\n            const roomMessage = await RoomService.deleteRoom(room._id)\r\n      \r\n            if(admin && nonAdmin && roomMessage) {\r\n                userChangesMade()\r\n            }\r\n      \r\n        } catch (err) {\r\n            console.log({err:err.message})\r\n        }\r\n    }\r\n\r\n    //changes otherUserAcceptance in database to true\r\n    const handleAcceptance = async (room) => {\r\n        const otherUserAcceptance = true\r\n        const roomObj = {...room, otherUserAcceptance }\r\n        try{\r\n            if (!roomObj) return\r\n            //updates room info, returns updated info\r\n            const updatedRoom = await RoomService.updateRoomsByID(roomObj)\r\n            //once return signals for room updating\r\n            if (updatedRoom){\r\n                roomChangesMade()\r\n            }\r\n        } catch (err) {\r\n            console.log({err:err})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!room.otherUserAcceptance &&\r\n                <ListGroup.Item className={`m-1 ${formColor}`}>\r\n                    {roomNonAdminInfo &&\r\n                        <Row>\r\n                            <Col className='text-center h5 m-2' xs={8}>\r\n                                {userIsAdmin ? `waiting for ${roomNonAdminInfo.username}'s response`\r\n                                :\r\n                                `${roomAdminInfo.username} wants to create a room named \"${room.roomName}\"`}\r\n                            </Col>\r\n\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col>\r\n                                        {!userIsAdmin ? \r\n                                            <div className=\"d-grid gap-2\">\r\n                                                <Button variant=\"primary\" onClick={() => handleAcceptance(room)}>Accept</Button>\r\n                                            </div>\r\n                                        : ''}\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <div className=\"d-grid gap-2\">\r\n                                            <Button variant=\"danger\" onClick={() => handleDeletion()}>Delete</Button>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n                </ListGroup.Item>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoomRequestForm\r\n","import React from 'react'\r\nimport {Container, ListGroup} from 'react-bootstrap'\r\nimport RoomRequestForm from './RoomRequestForm'\r\n\r\nfunction RoomRequestAcceptance({onUser, rooms, userChangesMade, roomChangesMade}) {\r\n    return (\r\n        <Container>\r\n            <ListGroup>\r\n                    {rooms && rooms.map((room) => <RoomRequestForm key={room._id} room={room} onUser={onUser} userChangesMade={userChangesMade} roomChangesMade={roomChangesMade}/>)}\r\n            </ListGroup>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RoomRequestAcceptance\r\n","import React from 'react'\r\nimport {Container, Col} from 'react-bootstrap'\r\n\r\nimport RoomCreationForm from './RoomCreationForm'\r\nimport RoomRequestAcceptance from './RoomRequestAcceptance'\r\n\r\nfunction RoomCreation({onUser, rooms, userChangesMade, roomChangesMade}) {\r\n    \r\n    return (\r\n        <Container>\r\n            <Col className='m-3'>\r\n                <h3>Create New Room</h3>\r\n                <RoomCreationForm onUser={onUser} userChangesMade={userChangesMade}/>\r\n            </Col>\r\n            <Col className='m-3'>\r\n                <h3>Request Acceptance</h3>\r\n                <RoomRequestAcceptance onUser={onUser} rooms={rooms} userChangesMade={userChangesMade} roomChangesMade={roomChangesMade}/>\r\n            </Col>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RoomCreation\r\n","import React, {useState, useEffect} from 'react'\r\nimport {ListGroup, Button, Row, Col, ButtonGroup, ToggleButton} from 'react-bootstrap'\r\nimport UserService from \"../../../services/user.service\";\r\nimport RoomService from \"../../../services/room.service\";\r\n\r\nfunction Room({room, onRoomSelection, userChangesMade}) {\r\n  const [otherUser, otherUserTask] = useState()\r\n\r\n  //get other user information\r\n  useEffect(() => {\r\n    const getOtherUserInfo = async () => {\r\n      const otherUser = await UserService.getUserInfoByID(room.otherUserID);\r\n      if (otherUser) {\r\n        otherUserTask(otherUser)\r\n      }\r\n    }\r\n    getOtherUserInfo()\r\n  }, [room]);\r\n\r\n  //Pass room info to function at top\r\n  const roomSelectionHandler = () => {\r\n    onRoomSelection(room)\r\n  }\r\n\r\n  const roomDeletionHandler = async (r) => {\r\n    try {\r\n      //remove room from admin's Room List - for admin\r\n      const admin = await UserService.UserRemoveRoomByID(r.adminID, r._id)\r\n      //remove room from other user's Room List - for admin\r\n      const nonAdmin = await UserService.UserRemoveRoomByID(r.otherUserID, r._id)\r\n      //remove room from other Rooms List\r\n      const roomMessage = await RoomService.deleteRoom(r._id)\r\n\r\n      if(admin && nonAdmin && roomMessage) {\r\n        userChangesMade()\r\n      }\r\n\r\n    } catch (err) {\r\n      console.log({err:err.message})\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {!room.otherUserAcceptance ? \"\":\r\n        <ListGroup.Item className='m-3'>\r\n          <Row>\r\n\r\n            <Col className='text-center h5 mt-3'>\r\n              {otherUser && <h4>{otherUser.username} - {room.roomName}</h4>}\r\n            </Col>\r\n\r\n            <Col>\r\n              <ButtonGroup className=\"m-2\">\r\n                <ToggleButton variant=\"outline-primary\" size=\"lg\" onClick={roomSelectionHandler}>\r\n                  Check Room\r\n                </ToggleButton>\r\n                <ToggleButton variant=\"outline-danger\" size=\"lg\" onClick={() => roomDeletionHandler(room)}>\r\n                  Delete\r\n                </ToggleButton>\r\n              </ButtonGroup>\r\n            </Col>\r\n\r\n          </Row>\r\n        </ListGroup.Item>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Room\r\n","import React from 'react'\r\nimport Room from './Room'\r\nimport {Container} from 'react-bootstrap'\r\n\r\nfunction Rooms({ rooms, onRoomSelection, userChangesMade}) {\r\n    \r\n    return (\r\n        <Container className='m-1'>\r\n            <h3>Select Room From List:</h3>\r\n            {rooms && rooms.map((room) => (\r\n                <Room\r\n                    key={room._id}\r\n                    room={room}\r\n                    onRoomSelection={onRoomSelection}\r\n                    userChangesMade={userChangesMade}\r\n                />\r\n            ))}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Rooms\r\n","import React, { useState, useEffect } from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\n\r\nimport UserService from \"../../../services/user.service\";\r\n\r\nimport RoomCreation from './RoomCreation'\r\nimport Rooms from './Rooms'\r\n\r\nfunction RoomSelection({onUser , onRoomSelection, userChangesMade}) {\r\n    const [roomsInfo, roomsInfoTask] = useState()\r\n    const [roomChangesMade, roomChangesMadeTask] = useState(false)\r\n    \r\n\r\n    //room info loading, set up prop for reset on changes\r\n    useEffect(() => {\r\n        const getRoomsInfo = async (userRoomID) => {\r\n            const roomsInfo = await Promise.all(userRoomID.map(rID => UserService.getRoomInfoByID(rID)))\r\n            roomsInfoTask(roomsInfo)\r\n        }\r\n        \r\n        //get room Json info\r\n        if (onUser) {\r\n            getRoomsInfo(onUser.delegatedRoomID)\r\n            \r\n        }\r\n\r\n    }, [onUser,roomChangesMade]);\r\n\r\n    return (\r\n        <Container className='m-4'>\r\n            {roomsInfo &&\r\n                <Row>\r\n                    <Col>\r\n                        <Rooms rooms={roomsInfo} onRoomSelection={onRoomSelection} userChangesMade={userChangesMade}/>\r\n                    </Col>\r\n                    <Col>\r\n                        <RoomCreation onUser={onUser} rooms={roomsInfo} userChangesMade={userChangesMade} roomChangesMade={() => roomChangesMadeTask(!roomChangesMade)}/>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RoomSelection","import React, {useState, useEffect} from 'react'\r\n\r\n//import icons from react-icons\r\nimport { GoArrowUp, GoArrowDown, GoCheck, GoX } from 'react-icons/go';\r\n\r\nimport {Button, Container, Row, Col} from 'react-bootstrap'\r\n\r\nconst TaskInProgress = ({task, userIsAdmin, taskProgress, taskUrgency, taskFinish, taskDelete, taskMoveUp, taskMoveDown}) => {\r\n    const [taskBorderColor, taskBorderColorTask] = useState('')\r\n    const [taskBackgroundColor, taskBackgroundColorTask] = useState('')\r\n\r\n    useEffect(() => {\r\n        //if task in Progress\r\n        if(task.inProgress) {\r\n            taskBorderColorTask('border border-success')\r\n        } else {\r\n            taskBorderColorTask('border border-secondary')\r\n        }\r\n        \r\n        //if task is urgent\r\n        if(task.Urgent) {\r\n            taskBackgroundColorTask('bg-warning')\r\n        } else {\r\n            taskBackgroundColorTask('')\r\n        }\r\n        \r\n    }, [task]);\r\n\r\n    \r\n    return (\r\n        <div>\r\n            {!task.isFinished ?\r\n                <Container className={`mb-3 ${taskBorderColor} ${taskBackgroundColor}`} onDoubleClick={() => taskUrgency(task)}>\r\n                    <Row className='align-items-center'>\r\n                        <Col sm={1}>\r\n                            {userIsAdmin && \r\n                                <div>\r\n                                    <Row>\r\n                                        <Button variant=\"info\" onClick={() => taskMoveUp(task)}>\r\n                                            <GoArrowUp />\r\n                                        </Button>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Button variant=\"info\" onClick={() => taskMoveDown(task)}>\r\n                                            <GoArrowDown />\r\n                                        </Button>\r\n                                    </Row>\r\n                                </div>\r\n                            }\r\n                        </Col>\r\n                        <Col className='text-center text-wrap mt-3 mb-3' sm>\r\n                                <label><h4>{task.description}</h4></label>\r\n                        </Col>\r\n                        <Col sm={2}>\r\n                            {task.inProgress ?\r\n                                <label><h4>in Progress...</h4></label>\r\n                                :\r\n                                <div>\r\n                                    {userIsAdmin ?\r\n                                    ''\r\n                                    :\r\n                                    <Button variant=\"outline-danger\" onClick={() => taskProgress(task)}>\r\n                                        <h4>START</h4>\r\n                                    </Button>}\r\n                                </div>\r\n                            }\r\n                        </Col>\r\n                        <Col sm={1}>\r\n                            {userIsAdmin ?\r\n                            <Button variant=\"danger\" onClick={() => taskDelete(task)}>\r\n                                <GoX />\r\n                            </Button>\r\n                            :\r\n                            <Button variant=\"outline-success\" onClick={() => taskFinish(task)}>\r\n                                <GoCheck />\r\n                            </Button>\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskInProgress\r\n","import React from 'react'\r\n\r\n//import icons from react-icons\r\nimport { GoReply } from 'react-icons/go';\r\nimport { BsTrash } from 'react-icons/bs';\r\n\r\nimport {Button, Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction TaskFinished({task, userIsAdmin, taskDelete, taskReturn}) {\r\n    return (\r\n        <div>\r\n            {task.isFinished ?\r\n                <Container className='mb-3 bg-dark text-white'>\r\n                    <Row>\r\n                        <Col className='text-center mt-2 mb-2' sm={10}>\r\n                            <del><h4>{task.description}</h4></del>\r\n                        </Col>\r\n                        <Col sm={1}>\r\n                            <Button className='mt-2 mb-2' variant=\"primary\" onClick={() => taskReturn(task)}>\r\n                                <GoReply />\r\n                            </Button>\r\n                        </Col>\r\n                        {userIsAdmin ?\r\n                            <Col sm={1}>\r\n                                <Button className='mt-2 mb-2' variant=\"danger\" onClick={() => taskDelete(task)}>\r\n                                    <BsTrash />\r\n                                </Button>\r\n                            </Col>\r\n                        :''}\r\n                    </Row>    \r\n                </Container>\r\n            : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskFinished\r\n","import React, {useState} from 'react'\r\n\r\nimport {Form, Container,Row, Button} from 'react-bootstrap'\r\n\r\nconst TaskForm = ({onTaskCreation}) => {\r\n    const [task, taskHandler] = useState('');\r\n    const [isUrgent, isUrgentHandler] = useState(false);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!task) {\r\n            alert('Must input task in order to submit')\r\n            return\r\n        }\r\n        \r\n        if ( task.split(' ').length <= 1 && task.length >= 30 ) {\r\n            alert('task must be sentence, please input correct task')\r\n            return\r\n        }\r\n        \r\n        const newTask = {\r\n            id: Date.now(),\r\n            description: task,\r\n            isFinished: false,\r\n            inProgress: false,\r\n            Urgent: isUrgent,\r\n        }\r\n        taskHandler('')\r\n        onTaskCreation(newTask)\r\n    }\r\n\r\n    return (\r\n        <Form className='h5' onSubmit={onSubmit}>\r\n            <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Task to Create</Form.Label>\r\n                    <Form.Control size=\"lg\" type='text' value={task} placeholder=\"Enter task\"  onChange={(e) => taskHandler(e.target.value)}/>\r\n            </Form.Group>\r\n            <Container className=\"mb-3\">\r\n                <Row sm={6}>\r\n                    <Form.Check \r\n                        className=\"ms-3\"\r\n                        title={isUrgent}\r\n                        type='checkbox'\r\n                        label='Urgent?'\r\n                        onClick={() => isUrgentHandler(!isUrgent)}\r\n                    />\r\n                    <Button className=\"ms-3\" size=\"lg\" type=\"submit\">Submit</Button>\r\n                </Row>\r\n            </Container>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default TaskForm\r\n","import React from 'react'\r\n\r\nimport {Tabs, Tab} from 'react-bootstrap'\r\n\r\nimport TaskInProgress from './TaskInProgress'\r\nimport TaskFinished from './TaskFinished'\r\nimport TaskForm from './TaskForm'\r\n\r\n\r\nconst Tasks = ({userIsAdmin, \r\n                tasks, \r\n                taskProgress, \r\n                taskUrgency, \r\n                taskFinish, \r\n                taskReturn,  \r\n                taskDelete, \r\n                taskMoveUp, \r\n                taskMoveDown, \r\n                onTaskCreation}) => {\r\n\r\n    return (\r\n        <div>\r\n            <Tabs defaultActiveKey=\"Active List\" className=\"mb-3 h4\">\r\n                <Tab eventKey=\"Active List\" title=\"Active List\">\r\n                    {userIsAdmin && <TaskForm onTaskCreation={onTaskCreation}/>}\r\n                    {tasks.map(task => \r\n                        <TaskInProgress \r\n                            key={task.id}\r\n                            task={task}\r\n                            userIsAdmin={userIsAdmin}\r\n                            taskDelete={taskDelete}\r\n                            taskFinish={taskFinish}\r\n                            taskMoveUp={taskMoveUp}\r\n                            taskMoveDown={taskMoveDown}\r\n                            taskUrgency={taskUrgency}\r\n                            taskProgress={taskProgress}\r\n                        />\r\n                    )}\r\n                </Tab>\r\n                <Tab eventKey=\"Finished List\" title=\"Finished List\">\r\n                    {tasks.map(task => \r\n                        <TaskFinished\r\n                            key={task.id}\r\n                            task={task}\r\n                            userIsAdmin={userIsAdmin}\r\n                            taskDelete={taskDelete}\r\n                            taskReturn={taskReturn}\r\n                        />\r\n                    )}\r\n                </Tab>\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import React, {useState,useEffect} from 'react'\r\n\r\nimport Tasks from './Tasks'\r\n\r\nimport RoomService from \"../../../services/room.service\";\r\n\r\nfunction RoomDisplayTasks({userIsAdmin, room}) {\r\n    const [tasks, tasksTask] = useState(room.delegatedTasks)\r\n\r\n    useEffect(() => {\r\n        \r\n        const delegatedTaskUpdate = async(tasks) =>{\r\n            const roomObj = {...room, delegatedTasks:tasks}\r\n            const res = await RoomService.updateRoomsByID(roomObj)\r\n        }\r\n        \r\n        try {\r\n            delegatedTaskUpdate(tasks)\r\n        } catch (err) {\r\n            console.log({err:err})\r\n        }\r\n\r\n    }, [tasks, room]);\r\n\r\n    //finished, moves task up on working array\r\n    const taskMoveUpHandler = (task) => {\r\n        const arrayIndex = tasks.map( t => {return t.id}).indexOf(task.id)\r\n        //edge cases for moving task up\r\n        if (arrayIndex < 1) return;\r\n        //array parts\r\n        const beforeArray = tasks.slice(0,arrayIndex-1)\r\n        const moveRightArray = tasks[arrayIndex-1]\r\n        const moveLeftArray = tasks[arrayIndex]\r\n        const afterArray = tasks.slice(arrayIndex+1)\r\n        //new array order\r\n        const newArray = [...beforeArray,moveLeftArray,moveRightArray,...afterArray]\r\n        tasksTask(newArray)\r\n    }\r\n\r\n    //finished, moves task down on working array\r\n    const taskMoveDownHandler = (task) => {\r\n        const arrayIndex = tasks.map( t => {return t.id}).indexOf(task.id)\r\n        const activeTasksLength = tasks.filter(task => task.isFinished === false).length\r\n        //edge cases for moving task down\r\n        if (arrayIndex+1 >= activeTasksLength) return;\r\n        //array parts\r\n        const beforeArray = tasks.slice(0,arrayIndex)\r\n        const moveRightArray = tasks[arrayIndex]\r\n        const moveLeftArray = tasks[arrayIndex+1]   \r\n        const afterArray = tasks.slice(arrayIndex+2)\r\n        //new array order\r\n        const newArray = [...beforeArray,moveLeftArray,moveRightArray,...afterArray]\r\n        tasksTask(newArray)\r\n    }\r\n\r\n    //finished, creates new task\r\n    const onTaskCreationHandler = (task) => {\r\n        const activeTasks = tasks.filter(task => task.isFinished === false)\r\n        const finishedTasks = tasks.filter(task => task.isFinished === true)\r\n        const newTasks = [...activeTasks, task, ...finishedTasks]\r\n        tasksTask(newTasks)\r\n    }\r\n\r\n    //finished, marks task as finished, moves to end of list\r\n    const taskFinishHandler = (task) => {\r\n        const newTask = {...task, isFinished:true}\r\n        const oldTasks = tasks.filter(t => t.id !== task.id)\r\n        const newTasks = [...oldTasks,newTask]\r\n        tasksTask(newTasks)\r\n    }\r\n\r\n    //marks task as unfinished and moves it to end of working list\r\n    const taskReturnHandler = (task) =>{\r\n        const newTask = {...task, isFinished:false, Urgent:false, inProgress: false}\r\n        const filteredTasks = tasks.filter(t => t.id !== task.id )\r\n        const activeTasks = filteredTasks.filter(t => t.isFinished === false)\r\n        const finishedTasks = filteredTasks.filter(t => t.isFinished === true )\r\n        const newTasks = [...activeTasks, newTask, ...finishedTasks]\r\n        tasksTask(newTasks)\r\n    }\r\n\r\n    //finished, deletes task from array\r\n    const taskDeleteHandler = (task) => {\r\n        const newTasks = tasks.filter(t => t.id !== task.id) \r\n        tasksTask(newTasks)\r\n    }\r\n    \r\n    //finished, updates task value to \r\n    const taskProgressHandler = (task) => {\r\n        //updates task\r\n        const newTask = {...task, inProgress:true}\r\n        //updates tasks\r\n        const newTasks = tasks.map(t => (t.id===task.id ? newTask : t))\r\n        tasksTask(newTasks)\r\n    }\r\n\r\n    //finished, changes task Urgency\r\n    const taskUrgencyHandler = (task) => {\r\n        //only allowed if admin\r\n        if(!userIsAdmin) return\r\n        //updates task\r\n        const newUrgency = !task.Urgent\r\n        const newTask = {...task, Urgent:newUrgency}\r\n        //updates tasks\r\n        const newTasks = tasks.map(t => (t.id===task.id ? newTask : t))\r\n        tasksTask(newTasks)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {tasks &&\r\n                <Tasks \r\n                    userIsAdmin={userIsAdmin} \r\n                    tasks={tasks} \r\n                    onTaskCreation={onTaskCreationHandler} \r\n                    taskFinish={taskFinishHandler}\r\n                    taskReturn={taskReturnHandler}\r\n                    taskDelete={taskDeleteHandler}\r\n                    taskMoveUp={taskMoveUpHandler}\r\n                    taskMoveDown={taskMoveDownHandler}\r\n                    taskProgress={taskProgressHandler}\r\n                    taskUrgency={taskUrgencyHandler}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoomDisplayTasks\r\n\r\n\r\n/*[\r\n    {\r\n        id: 1,\r\n        description: 'Task 1',\r\n        isFinished: false,\r\n        inProgress: false,\r\n        Urgent:false,\r\n    },\r\n    {\r\n        id: 2,\r\n        description: 'Task 2',\r\n        isFinished: false,\r\n        inProgress: false,\r\n        Urgent:true,\r\n    },\r\n    {\r\n        id: 3,\r\n        description: 'Task 3',\r\n        isFinished: false,\r\n        inProgress: true,\r\n        Urgent:false,\r\n    },\r\n    {\r\n        id: 4,\r\n        description: 'Task 4',\r\n        isFinished: true,\r\n        inProgress: true,\r\n        Urgent:false,\r\n    }\r\n]*/","import React, {useState, useEffect} from 'react'\r\n\r\nimport RoomDisplayTasks from './RoomDisplayTasks'\r\n\r\nfunction RoomDisplayHub({room, onUser}) {\r\n    const [userIsAdmin, userIsAdminTask] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if(room.adminID === onUser._id) {\r\n            userIsAdminTask(true)\r\n        } else {\r\n            userIsAdminTask(false)\r\n        }\r\n    }, [room,onUser]);\r\n\r\n    return (\r\n        <div>\r\n            <RoomDisplayTasks userIsAdmin={userIsAdmin} room={room}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoomDisplayHub\r\n","import React, {useState, useEffect} from 'react'\r\nimport RoomSelection from './RoomSelection/RoomSelection'\r\nimport RoomDisplayHub from './RoomDisplay/RoomDisplayHub'\r\n\r\nimport UserService from \"../../services/user.service\";\r\n\r\nimport {Button, Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction Planner({onVerifiedUser}) {\r\n    const [userInfo, userInfoTask] = useState()\r\n    const [roomSelected, roomSelectedTask] = useState('')\r\n    const [userChangesMade, userChangesMadeTask] = useState(false)\r\n    \r\n    //if user has been verified(logged in) get user information to pass as prop, changes based on change Prop\r\n    useEffect(() => {\r\n        const getUser = async () => {\r\n            if (!onVerifiedUser) return;\r\n            try {\r\n                const user = await UserService.getUserInfo();\r\n                if (user) {\r\n                    userInfoTask(user)\r\n                }\r\n            } catch (err) {\r\n                console.log({ err: err.message })\r\n            }\r\n        } \r\n        \r\n        getUser()\r\n    }, [onVerifiedUser, userChangesMade]);\r\n\r\n    //updates roomSelected prop with Object having the selected room information\r\n    const roomSelectionHandler = (roomInfo) => {\r\n        roomSelectedTask(roomInfo)\r\n    }\r\n\r\n    //updates user based on PATCH changes\r\n    /*const userUpdatedHandler = (roomInfo) => {\r\n        roomSelectedTask(roomInfo)\r\n    }*/\r\n\r\n    return (\r\n        <div>\r\n            { userInfo &&\r\n                <div className=\"jumbotron\">\r\n                    <h2>Planner:</h2>\r\n                    {roomSelected ?\r\n                        <div>\r\n                            <Container className='text-center mt-3'>\r\n                                <Row>\r\n                                    <Col className='text-decoration-underline'>\r\n                                        <h3>{roomSelected.roomName}</h3>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Button className='mb-3' size=\"lg\" onClick={() => roomSelectedTask('')}>Return to Room Selection</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                            <RoomDisplayHub onUser={userInfo} room={roomSelected} />\r\n                        </div>\r\n                    :\r\n                        <div>\r\n                            {userInfo && <RoomSelection onUser={userInfo} onRoomSelection={roomSelectionHandler} userChangesMade={() => userChangesMadeTask(!userChangesMade)}/>}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default Planner\r\n","import React from 'react'\r\n\r\nconst ContactUs = () => {\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            <h2>Contact Us</h2>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default ContactUs\r\n","import React, {useState} from 'react'\r\nimport {Form, Button, Nav} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport AuthService from \"../services/auth.service\";\r\nimport { useHistory} from \"react-router-dom\";\r\n\r\nconst SignUp = () => {\r\n    let history = useHistory();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [userpassword, setUserpassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [passwordVerification, passwordVerificationTask] = useState(\"\");\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!username || !userpassword || !passwordVerification || !email) {\r\n        alert(\"Missing a value in form, please fill all elements in form\");\r\n        return;\r\n        }\r\n\r\n        if (userpassword !== passwordVerification) {\r\n            passwordVerificationTask(\"\")\r\n            alert(\"Passwords do not match, please try again\");\r\n            return;\r\n        }\r\n\r\n        const onReset = () =>{\r\n            setUsername(\"\");\r\n            setUserpassword(\"\");\r\n            passwordVerificationTask(\"\")\r\n            setEmail(\"\")\r\n        }\r\n\r\n        try {\r\n            AuthService.register(username, userpassword, email).then(\r\n                () => {\r\n                    history.push(\"/login\")\r\n                },\r\n                (err) => {\r\n                    console.log({err:err})\r\n                }\r\n              ).then(onReset())\r\n        } catch (err) {\r\n            console.log({err:err})\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='login_class_container jumbotron'>\r\n            <Form onSubmit={onSubmit}>\r\n                \r\n                <Form.Group className=\"login_form_input mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={(e) => setEmail(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"login_form_input mb-3\" controlId=\"formBasicText\">\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter username\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"login_form_input mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={userpassword} onChange={(e) => setUserpassword(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"login_form_input mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"type password again\" value={passwordVerification} onChange={(e) => passwordVerificationTask(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Button className=\"m-6 btn-lg\" variant=\"primary\" type=\"submit\">\r\n                    SignUp!\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <LinkContainer to=\"/login\">\r\n                    <Nav.Link className='text-center h5 mt-5'>Already have a Profile? Click Here to Sign in!</Nav.Link>\r\n            </LinkContainer>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import React, {useState,useEffect} from 'react'\r\nimport { Route, useHistory } from \"react-router-dom\";\r\nimport NavBar from './NavBar'\r\n\r\n//Auth functions\r\nimport AuthService from \"../services/auth.service\";\r\n\r\n//components\r\nimport Home from \"./Home\";\r\nimport Login from \"./Login\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport Planner from \"./Planner/Planner\";\r\nimport ContactUs from \"./ContactUs\";\r\nimport SignUp from \"./SignUp\";\r\n\r\n\r\nconst RouterPage = () => {\r\n    let history = useHistory();\r\n    const [userVerification, userVerificationTask] = useState(false);\r\n    \r\n    //on event checks for token and updates prop if available\r\n    const LogIn = () => {\r\n        const verifiedUser = AuthService.getCurrentUser();\r\n        if (verifiedUser) {\r\n            userVerificationTask(true);\r\n        }\r\n    };\r\n\r\n    //removes Token from Local storage, resets prop, sends user to Home page\r\n    const logOut = () => {\r\n        AuthService.logout();\r\n        userVerificationTask(false)\r\n        history.push(\"/home\")\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <NavBar fixed=\"top\" onVerifiedUser={userVerification} onLogOut={() => logOut()}/>\r\n            \r\n            <div className=\"container mt-3\">\r\n                <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n                <Route exact path=\"/login\" component={() => (<Login onLogin={() => LogIn()} />)}/>\r\n                <Route exact path=\"/profile\" component={Profile}/>\r\n                <Route exact path=\"/planner\" component={() => (<Planner onVerifiedUser={userVerification} />)}/>\r\n                <Route exact path=\"/contactUs\" component={ContactUs} />\r\n                <Route exact path=\"/signup\" component={SignUp} />\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default RouterPage","import RouterPage from \"./components/RouterPage\";\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <RouterPage />\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Switch } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/React\">\r\n    <Switch>\r\n      <App />\r\n    </Switch>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}